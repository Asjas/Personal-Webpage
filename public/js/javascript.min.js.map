{"version":3,"sources":["javascript.js"],"names":["document","addEventListener","links","querySelectorAll","selector","anchor","el","preventDefault","hashValue","$","this","hash","length","scrollTop","stop","animate","offset","top","menuTrigger","element","mainOverlay","anchorsClicked","section","querySelector","clonedHeader","header","classList","add","stickyHeader","scrollFromTop","undefined","window","toggle","parentNode","smoothScrollEffect","Parallax","body","scene","forEach","removeOverlay","remove","addOverlay","itemSelector","grid","Masonry","columnWidth","fitWidth","gutter","slidesToShow","slidesToScroll","adaptiveHeight","pauseOnHover","arrows","prevArrow","nextArrow","responsive","breakpoint","settings"],"mappings":"aAIAA,SAASC,iBAAiB,mBAAoB,WAsB1C,SAAMC,EAAiBC,GAATH,SAASG,iBAAiBC,GAGtCC,QAAOJ,SAAAA,GACLK,EAAGC,iBAAH,QAAA,SAAAD,GACAA,EAAAC,iBAAA,IAAMC,EAAYC,EAAEC,KAAKC,MAGrBH,EAAAI,QAIIC,EAAAA,cAEFC,OAELC,SAdLF,UAAAL,EAAAQ,SAAAC,IAAA,IAkBF,SA6BA,SAAMC,EAAclB,GACpBmB,EAAMC,iBAAuBjB,QAAAA,WACvBkB,EAAAA,UAAAA,OAAiBrB,iBAxEvB,IAAMsB,EAAUtB,SAASuB,cAAc,WADzCvB,EAASC,SAAiBsB,cAAA,UAClBD,EAAUtB,EAASuB,WAAc,GAEvCD,EAAME,aAAeC,EAAAA,GAEAD,SAAAA,cAArB,UAGaE,UAAUC,IAAI,UAA3BC,OAAAA,iBAAuBD,SAAI,WAGzB,IAAME,OADgBC,IAAxBC,OAAO9B,YACC4B,OAAAA,aAIN7B,SAASuB,iBAAsBG,SAAUM,KAAOC,YAAUJ,SAAAA,MAA1DhB,UALFb,SAAAuB,cAAA,QAAAG,UAAAM,OAAA,SAAAH,EAAA,OAyCAK,EAAclC,cACdkC,EAAqBC,iBAKrB,IAAMC,EAAOpC,SAASuB,eAAc,SAMnCa,GAXgB,IAAID,SAASE,GAW7BrC,SAAAuB,cAAA,SAYDL,EAAAlB,SAAAG,iBAAA,oBAHMiB,EAAcpB,SAASG,iBAAiB,oBAO9CiB,EAAoBpB,SAAAG,iBAAQ,cAE3Be,EAFDoB,QAAA,SAAAhC,IAdA,SAASiC,GACPpB,EAAQlB,iBAAiB,QAAS,WAChCmC,EAAKV,UAAUc,IAAAA,iBASjBC,CAAWnC,KASZc,EAFDkB,QAAA,SAAAhC,GAnFFiC,EAAAjC,KAmFEe,EAAeiB,QAAQ,SAAChC,GACtBiC,EAAcjC,OAedoC,OAAAA,OAAAA,WADgC,IAAlCC,EAAA3C,SAAAuB,cAAA,SAAgB,IAAIqB,QAAQD,GAO5BD,aAAA,aALEG,YAAa,GACbC,UAAU,EAOVC,OAAA,IAMAC,EAAAA,WAAAA,OACAC,SAAAA,WACAC,UAAAA,EACAC,cAAc,KACdC,MAAAA,EACAC,YAAW,EACXC,aAAW,EACXC,eACE,EACEC,gBAAY,EACZC,cAAU,EACRT,QAAAA,EACAC,UAAAA,6DAFQK,UAAA,yDAFZC,aASEE,WAAU,IACRT,UACAC,aAAgB,EAFRA,eAAA,KAQRD,WAAAA,IACAC,UAFQD,aAAA,EAjBFC,eAAA,KAgBRO,WAAY,IACZC,UACET,aAAc,EACdC,eAAgB","file":"javascript.min.js","sourcesContent":["/*\n  On page load I clone the header and create a sticky header that\n  renders when you scroll past a certain point in the website.\n*/\ndocument.addEventListener('DOMContentLoaded', () => {\n  const section = document.querySelector('section');\n  const header = document.querySelector('header');\n  const clonedHeader = header.cloneNode(true);\n\n  section.insertBefore(clonedHeader, header);\n\n  const stickyHeader = document.querySelector('header');\n  stickyHeader.classList.add('sticky');\n\n  window.addEventListener('scroll', () => {\n    const scrollFromTop =\n      window.pageYOffset !== undefined\n        ? window.pageYOffset\n        : (document.documentElement || document.body.parentNode || document.body).scrollTop;\n    document.querySelector('body').classList.toggle('scroll', scrollFromTop > 500);\n  });\n\n  /*\n    Smooth Scrolling Functionality\n  */\n  function smoothScrollEffect(selector) {\n    const links = document.querySelectorAll(selector);\n\n    links.forEach((anchor) => {\n      anchor.addEventListener('click', function scroll(el) {\n        el.preventDefault();\n        const hashValue = $(this.hash);\n\n        if (hashValue.length) {\n          $('html, body')\n            .stop()\n            .animate(\n              {\n                scrollTop: hashValue.offset().top - 80,\n              },\n              1000,\n            );\n        }\n      });\n    });\n  }\n  /*\n    Enable smooth scrolling for navbar & both the buttons in the hero banner\n  */\n  smoothScrollEffect('.menu li a');\n  smoothScrollEffect('.wrapper li a');\n\n  /*\n    Parallax Scene in hero banner\n  */\n  const scene = document.getElementById('scene');\n  const parallax = new Parallax(scene);\n\n  /*\n    Responsive Navbar Menu\n  */\n  const body = document.querySelector('body');\n\n  function addOverlay(element) {\n    element.addEventListener('click', () => {\n      body.classList.add('menu-active');\n    });\n  }\n\n  function removeOverlay(element) {\n    element.addEventListener('click', () => {\n      body.classList.remove('menu-active');\n    });\n  }\n\n  const menuTrigger = document.querySelectorAll('.js-menu-trigger');\n  const mainOverlay = document.querySelectorAll('.js-main-overlay');\n  const anchorsClicked = document.querySelectorAll('.menu li a');\n\n  menuTrigger.forEach((el) => {\n    addOverlay(el);\n  });\n\n  mainOverlay.forEach((el) => {\n    removeOverlay(el);\n  });\n\n  anchorsClicked.forEach((el) => {\n    removeOverlay(el);\n  });\n});\n\n/*\n  Window.onload is used to initialize masonry and slick slider only\n  when all the images have been loaded. This helps to make sure the\n  images load correctly and don't overlap esp. in the masonry grid.\n*/\nwindow.onload = function masonryFunc() {\n  /*\n    Masonry Grid for image showcase\n  */\n  const grid = document.querySelector('.grid');\n  const masonry = new Masonry(grid, {\n    itemSelector: '.grid-item',\n    columnWidth: 80,\n    fitWidth: true,\n    gutter: 2,\n  });\n\n  /*\n    Slider js for library showcase\n  */\n  $('.slider').slick({\n    lazyLoad: 'ondemand',\n    autoplay: true,\n    autoplaySpeed: 1500,\n    dots: true,\n    centerMode: true,\n    slidesToShow: 4,\n    slidesToScroll: 4,\n    adaptiveHeight: false,\n    pauseOnHover: false,\n    arrows: true,\n    prevArrow: '<button type=\"button\" class=\"slick-prev\">Previous</button>',\n    nextArrow: '<button type=\"button\" class=\"slick-next\">Mext</button>',\n    responsive: [\n      {\n        breakpoint: 768,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 3,\n        },\n      },\n      {\n        breakpoint: 625,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2,\n        },\n      },\n      {\n        breakpoint: 475,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n        },\n      },\n    ],\n  });\n};\n"]}